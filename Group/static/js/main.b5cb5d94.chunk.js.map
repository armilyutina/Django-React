{"version":3,"sources":["consts.js","App.js","actions/actions.js","reducers/fetchData.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["FETCH_DATA","REMOVE_DATA","mapDispatchToProps","fetchData","dispatch","a","axios","method","url","response","type","payload","data","removeData","id","connect","state","getData","useEffect","className","map","i","to","pathname","fromDashboard","number","onClick","initialState","rootReducer","combineReducers","filter","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","undefined","applyMiddleware","ReactDOM","render","StrictMode","exact","component","App","document","getElementById"],"mappings":"kOAAaA,EAAa,aACbC,EAAc,c,6BCqC3B,IAKMC,EAAqB,CAACC,UCxCH,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACJC,IAAM,CACzBC,OAAQ,MACRC,IAAK,oCAHkB,OACrBC,EADqB,OAM3BL,EAAS,CACLM,KAAMV,EACNW,QAASF,EAASG,OARK,2CAAN,uDDwCcC,WC3Bb,SAAAC,GAAE,MAAK,CAC7BJ,KAAMT,EACNa,QD2BWC,eAPS,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,WAMuBf,EAAzBa,EApCf,YAAgD,IAAlCZ,EAAiC,EAAjCA,UAAWc,EAAsB,EAAtBA,QAASJ,EAAa,EAAbA,WAWhC,OATAK,qBAAU,WACRf,MACC,IAQD,sBAAKgB,UAAY,MAAjB,UACE,mBAAGA,UAAY,QAAf,mFACA,oBAAIA,UAAU,KAAd,SACKF,EAAQG,KAAI,SAAAC,GAAC,OACZ,qBAAIF,UAAY,KAAhB,UACE,cAAC,IAAD,CAAMA,UAAY,OAAOG,GAAM,CAAEC,SAAS,SAAD,OAAWF,EAAEP,IAAMU,eAAe,GAA3E,SACKH,EAAEI,SAEP,wBAAQC,QAAW,kBAAIb,EAAWQ,EAAEP,KAApC,sBAJ0BO,EAAEP,e,eEtBpCa,EAAe,GCQNC,EAPKC,YAAgB,CAChCZ,QDCmB,WAAgD,IAA/CD,EAA8C,uDAAtCW,EAAsC,yCAAvBjB,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASG,EAAQ,EAARA,GAC1D,OAAOJ,GACH,KAAKV,EACD,OAAOW,EACX,KAAKV,EACD,OAAOe,EAAMc,QAAO,SAAAT,GAAC,OAAIA,IAAMP,KACnC,QACI,OAAOE,MENbe,EAAa,CAACC,KAGdC,GACiB,qBAAXC,OACRA,OAAOC,qCAAuC,OAAQC,IAU3CC,EAPDC,YACVV,OACAW,EACAN,EAAiBO,IAAe,WAAf,EAAmBT,K,OCVxCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOf,GAAI,IAAIsB,OAAK,EAACC,UAAaC,YAK1CC,SAASC,eAAe,W","file":"static/js/main.b5cb5d94.chunk.js","sourcesContent":["export const FETCH_DATA = \"FETCH_DATA\"\nexport const REMOVE_DATA = \"REMOVE_DATA\"","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchData, removeData } from './actions/actions.js'\nimport { Link } from 'react-router-dom'\nimport \"@fortawesome/fontawesome-free\"\n\n\nimport \"./style.css\"\n\nfunction App({fetchData, getData, removeData}) {\n\n  useEffect(()=>{\n    fetchData()\n  }, [])\n\n  const handleClick = () => {\n\n  }\n\n\n  return (\n    <div className = \"app\">\n      <p className = \"title\"> Список групп </p>\n      <ul className=\"ul\">\n          {getData.map(i => \n            <li className = \"li\" key = {i.id}>\n              <Link className = \"link\" to = {{ pathname: `group/${i.id}`, fromDashboard: false}}>\n                  {i.number}\n              </Link>\n              <button onClick = {()=>removeData(i.id)}>Remove</button>\n            </li>)\n          }\n      </ul>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  getData: state.getData\n})\n\n\nconst mapDispatchToProps = {fetchData, removeData}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import axios from 'axios'\nimport { FETCH_DATA, REMOVE_DATA } from '../consts.js'\n\nexport const fetchData = () => async dispatch => {\n    const response = await axios({\n        method: \"GET\",\n        url: 'http://127.0.0.1:8000/api/group'\n    })\n\n    dispatch({\n        type: FETCH_DATA,\n        payload: response.data\n    })\n}\n\n\nexport const removeData = id => ({\n    type: REMOVE_DATA,\n    id\n})\n\n","import { FETCH_DATA, REMOVE_DATA } from '../consts.js'\n\n\nconst initialState = []\n\n\nexport const getData = (state = initialState, {type, payload, id}) => {\n    switch(type){\n        case FETCH_DATA:\n            return payload\n        case REMOVE_DATA:\n            return state.filter(i => i !== id)\n        default:\n            return state\n    }\n}\n\n","import { combineReducers, combuneReducers } from 'redux'\nimport { getData } from './fetchData.js'\n\n\nconst rootReducer = combineReducers({\n    getData\n})\n\n\n\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n\nimport rootReducer from '../reducers/rootReducer'\n\n\nconst middleware = [thunk]\n\n\nconst composeEnhancers = \n    (typeof window !== 'undefined' ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null )||compose;\n\n\nconst store = createStore(  \n    rootReducer, \n    undefined,\n    composeEnhancers(applyMiddleware(...middleware))\n)\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider } from 'react-redux'\nimport store from './store/store.js'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store} >\n      <Router>\n        <Switch>\n          <Route to= '/' exact component = {App} />\n        </Switch>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}